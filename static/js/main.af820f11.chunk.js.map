{"version":3,"sources":["components/info/Info.js","components/dropbar/DropBar.js","components/projects/Projects.js","components/neonLogin/neonLogin.js","components/navbar/NavBar.js","components/animation/Animate.js","components/slider/Slider.js","components/neonbar/NeonBar.js","components/footer/Footer.js","components/app/App.js","serviceWorker.js","index.js"],"names":["Info","className","placeholder","React","Component","DropBar","props","useSpring","config","duration","opacity","from","div","style","href","target","rel","items","mass","tension","friction","Projects","useState","toggle","trail","useTrail","length","x","height","width","map","index","rest","key","transform","interpolate","NeonLogin","type","NavBar","state","isToggleOn","isToggleOnDropBar","isToggleOnProjects","isToggleLogin","renderInfo","bind","toggleClick","toggleClickDropBar","toggleClickProjects","toggleClickLogin","this","setState","onClick","Animated","props2","slides","id","backgroundColor","Slider","set","transition","useTransition","item","enter","leave","useEffect","setInterval","sign","text","NeonBar","textShadow","boxShadow","color","Footer","App","toggleInfo","info","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mbA+CeA,G,kBA3Cf,iLAUQ,OAEI,yBAAMC,UAAU,QACZ,yBAAKA,UAAU,eAAf,QACA,yBAAKA,UAAU,iBAAf,eACA,yBAAKA,UAAU,aACX,6BACI,uCADJ,wGASJ,yBAAKA,UAAU,cAEX,yBAAKA,UAAU,QAAQC,YAAY,YAAnC,YACA,yBAAKD,UAAU,QAAQC,YAAY,aAAnC,aACA,yBAAKD,UAAU,QAAQC,YAAY,UAAnC,UACA,yBAAKD,UAAU,QAAQC,YAAY,YAAnC,aAGJ,yBAAKD,UAAU,eAAf,gCAjChB,GAA0BE,IAAMC,Y,eC0BjBC,MA1Bf,WACI,IAAMC,EAAQC,YAAU,CAACC,OAAQ,CAACC,SAAU,KAAOC,QAAS,EAAGC,KAAM,CAACD,QAAS,KAE/E,OACI,kBAAC,IAASE,IAAV,CAAcC,MAAOP,GACjB,yBAAKL,UAAU,OACX,yDAGA,sEAGA,uBAAIA,UAAU,MACVa,KAAK,qBACLC,OAAO,SACPC,IAAI,uBAHR,OAKA,yBAAKf,UAAU,OAAf,OACA,yBAAKA,UAAU,OAAf,OACA,yBAAKA,UAAU,OAAf,U,slBClBhB,IAAMgB,EAAQ,CAAC,MAAO,MAAO,SACvBT,EAAS,CAACU,KAAM,GAAIC,QAAS,KAAMC,SAAU,KAmCpCC,MAjCf,WAAmB,MAEOC,oBAAS,GAFhB,mBAERC,EAFQ,KAITC,GAJS,KAIDC,YAASR,EAAMS,OAAQ,CACjClB,SACAE,QAASa,EAAS,EAAI,EACtBI,EAAGJ,EAAS,EAAI,GAEhBK,OAAQL,EAAS,GAAK,EACtBM,MAAON,EAAS,IAAM,EAEtBZ,KAAM,CAACD,QAAS,EAAGiB,EAAG,GAAIC,OAAQ,EAAGC,MAAO,MAGhD,OAEQ,6BACCL,EAAMM,KAAI,WAAyBC,GAAzB,IAAGJ,EAAH,EAAGA,EAAGC,EAAN,EAAMA,OAAWI,EAAjB,qCACP,kBAAC,IAASpB,IAAV,CACAqB,IAAKhB,EAAMc,GACX9B,UAAU,OACVY,MAAK,KAAOmB,EAAP,CAAaE,UAAWP,EAAEQ,aAAY,SAAAR,GAAC,8BAAqBA,EAArB,eAC5C,kBAAC,IAASf,IAAV,CAAcC,MAAO,CAAEe,WAAWX,EAAMc,UCDzCK,G,MAzBG,WAGd,OACI,yBAAKnC,UAAU,cACX,2BAAOC,YAAY,WACXmC,KAAK,OACLpC,UAAU,mBAClB,2BAAOC,YAAY,WACXmC,KAAK,WACLpC,UAAU,mBAClB,yBAAKA,UAAU,cACX,+BACA,+BACA,+BACA,+BAJJ,YCkGGqC,EAzGf,YAEI,WAAYhC,GAAO,IAAD,8BACd,4CAAMA,KAEDiC,MAAQ,CACTC,YAAY,EACZC,mBAAmB,EACnBC,oBAAoB,EACpBC,eAAe,GAGnB,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,mBAAqB,EAAKA,mBAAmBF,KAAxB,gBAC1B,EAAKG,oBAAsB,EAAKA,oBAAoBH,KAAzB,gBAC3B,EAAKI,iBAAmB,EAAKA,iBAAiBJ,KAAtB,gBAdV,EAFtB,0EAqBQ,OACI,yBAAK5C,UAAU,eAAf,UAtBZ,oCA2BQiD,KAAKC,SAAS,CACVX,YAAaU,KAAKX,MAAMC,WACxBC,mBAAmB,EACnBC,oBAAoB,MA9BhC,2CAmCQQ,KAAKC,SAAS,CACVV,mBAAoBS,KAAKX,MAAME,kBAC/BD,YAAY,EACZE,oBAAoB,MAtChC,4CA2CQQ,KAAKC,SAAS,CACVT,oBAAqBQ,KAAKX,MAAMG,mBAChCF,YAAY,EACZC,mBAAmB,MA9C/B,yCAmDQS,KAAKC,SAAS,CACVT,oBAAoB,EACpBF,YAAY,EACZC,mBAAmB,EACnBE,eAAgBO,KAAKX,MAAMI,kBAvDvC,+BA6DQ,OACI,6BAEI,yBAAK1C,UAAU,YACX,oCACA,yBAAKA,UAAU,WAAWmD,QAASF,KAAKJ,aACpC,yCAIJ,yBAAK7C,UAAU,WAAWmD,QAASF,KAAKH,oBACpC,mCAGJ,yBAAK9C,UAAU,WAAWmD,QAASF,KAAKF,qBAEpC,yCAKJ,yBAAK/C,UAAU,YAAW,2CAC1B,yBAAKA,UAAU,YAAW,wCAE1B,yBAAKA,UAAU,WAAWmD,QAASF,KAAKD,kBACpC,sCAGHC,KAAKX,MAAMC,WAAa,kBAAC,EAAD,MAAW,KACnCU,KAAKX,MAAME,kBAAoB,kBAAC,EAAD,MAAc,KAC7CS,KAAKX,MAAMI,cAAgB,kBAAC,EAAD,MAAgB,MAIhD,yBAAK1C,UAAU,oBACViD,KAAKX,MAAMG,mBAAqB,kBAAC,EAAD,MAAe,WAhGpE,GAA4BvC,IAAMC,W,MCkBnBiD,MArBf,WAEI,IAAM/C,EAAQC,YAAU,CAACC,OAAQ,CAACC,SAAU,KAAQC,QAAS,EAAGC,KAAM,CAACD,QAAS,KAE1E4C,EAAS/C,YAAU,CAACC,OAAQ,CAACC,SAAU,KAAOC,QAAS,EAAGC,KAAM,CAACD,QAAS,KAGhF,OACQ,kBAAC,IAASE,IAAV,CAAcC,MAAOP,GACjB,yBAAKL,UAAU,SACX,mCAGA,kBAAC,IAASW,IAAV,CAAcC,MAAOyC,EAAQrD,UAAU,UAAvC,c,+jBCfpB,IAAMsD,EAAS,CACX,CAACC,GAAI,EAAGC,gBAAiB,SACzB,CAACD,GAAI,EAAGC,gBAAiB,OACzB,CAACD,GAAI,EAAGC,gBAAiB,UACzB,CAACD,GAAI,EAAGC,gBAAiB,UAIvBjD,EAAS,CAACU,KAAM,EAAGC,QAAS,IAAKC,SAAU,KA6BlCsC,EAzBA,WAAO,IAAD,EACIpC,mBAAS,GADb,mBACVS,EADU,KACH4B,EADG,KAEXC,EAAaC,YAAcN,EAAOxB,IAAQ,SAAA+B,GAAI,OAAIA,EAAKN,KAAI,CAC7D7C,KAAM,CAACD,QAAS,GAChBqD,MAAO,CAACrD,QAAS,GACjBsD,MAAO,CAACtD,QAAS,GACjBF,WAKJ,OAFAyD,qBAAU,kBAAMC,aAAY,kBAAMP,GAAI,SAAApB,GAAK,OAAKA,EAAQ,GAAK,OAAI,OAAO,IAEjEqB,EAAW9B,KAAI,gBAAEgC,EAAF,EAAEA,KAAMxD,EAAR,EAAQA,MAAO2B,EAAf,EAAeA,IAAf,OAClB,kBAAC,IAASrB,IAAV,CACIqB,IAAKA,EACLhC,UAAU,SAEVY,MAAK,KAAMP,EAAN,CAAamD,gBAAgB,GAAD,OAAKK,EAAKL,oBAE3C,0E,+jBC9BZ,IAAMU,EAAO,CACT,CAACX,GAAI,EAAGY,KAAM,mBACd,CAACZ,GAAI,EAAGY,KAAM,kBACd,CAACZ,GAAI,EAAGY,KAAM,iBACd,CAACZ,GAAI,EAAGY,KAAM,mBAGZ5D,EAAS,CAACU,KAAM,GAAIC,QAAS,IAAKC,SAAU,KAwCnCiD,EArCC,WAAO,IAAD,EACG/C,mBAAS,GADZ,mBACXS,EADW,KACJ4B,EADI,KAEZC,EAAaC,YAAcM,EAAKpC,IAAQ,SAAA+B,GAAI,OAAIA,EAAKN,KAAI,CAC3D7C,KAAM,CAACD,QAAS,EAAG4D,WAAY,mBAC/BC,UAAW,8CACXR,MAAO,CAACrD,QAAS,EAAG4D,WAAY,mBAAoBE,MAAO,QAC3DD,UAAW,gDACXP,MAAO,CAACtD,QAAS,EAAG4D,WAAY,mBAChCC,UAAW,8CACX/D,WAKJ,OAFAyD,qBAAU,kBAAMC,aAAY,kBAAMP,GAAI,SAAApB,GAAK,OAAKA,EAAQ,GAAK,OAAI,OAAO,IAEjEqB,EAAW9B,KAAI,cAAEgC,KAAF,IAAQxD,EAAR,EAAQA,MAAe0B,GAAvB,EAAeC,IAAf,8CAClB,kBAAC,IAASrB,IAAV,CACAqB,IAAKkC,EAAKpC,GACV9B,UAAU,WACVY,MAAK,KAAMP,EAAN,GAAgB0B,IAHrB,cCrBOyC,IC+DAC,E,YAtDb,WAAYpE,GAAO,IAAD,8BAChB,4CAAMA,KAURqE,WAAa,WACX,EAAKxB,SAAS,CACZyB,MAAQ,EAAKrC,MAAMqC,QAXrB,EAAKrC,MAAQ,CACXqC,MAAO,GAGT,EAAKD,WAAa,EAAKA,WAAW9B,KAAhB,gBANF,E,0EAoBDvB,oBAAS,K,+BAKxB,OACE,6BACE,yBAAKrB,UAAU,OAGX,kBAAC,EAAD,MACA,qEAGA,kBAAC,EAAD,MACA,uBACEA,UAAU,WACVa,KAAK,yBACLC,OAAO,SACPC,IAAI,uBAJN,kBAQA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GA/CMb,IAAMC,WCHJyE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.af820f11.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Info.css';\r\n\r\nexport class Info extends React.Component {\r\n\r\n    /*constructor(props){\r\n        super(props);\r\n    } */\r\n    \r\n    \r\n\r\n    render(){\r\n        \r\n        return (\r\n            \r\n            <div  className=\"info\">\r\n                <div className=\"info-header\"> Hej</div>\r\n                <div className=\"info-headline\">tja tja tja</div>\r\n                <div className=\"info-text\">\r\n                    <div>\r\n                        <h3>tjenare</h3>\r\n                        \r\n                            hejsan tjo tjo gott de ska bli med kaffe och fika och \r\n                            vem är det som har baka di här bullorna\r\n\r\n                        \r\n                    </div>\r\n                </div>\r\n                <div className=\"info-links\">\r\n                \r\n                    <div className=\"logo1\" placeholder=\"facebook\">facebook</div>\r\n                    <div className=\"logo1\" placeholder=\"instagram\">instagram</div>\r\n                    <div className=\"logo1\" placeholder=\"github\">github</div>\r\n                    <div className=\"logo1\" placeholder=\"linkedin\">linkedin</div>\r\n\r\n                </div>\r\n                <div className=\"info-footer\"> \r\n                    RingMig@hvaftrudner.com\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Info;","import React from 'react';\r\nimport './DropBar.css';\r\nimport {useSpring, animated} from 'react-spring';\r\n\r\nfunction DropBar(){\r\n    const props = useSpring({config: {duration: 2000}, opacity: 1, from: {opacity: 0}})\r\n\r\n    return (\r\n        <animated.div style={props}>\r\n            <div className=\"try\">\r\n                <p>\r\n                    First try for animated box\r\n                </p>\r\n                <p>\r\n                    tja tja vem har baka di här bullorna\r\n                </p>\r\n                <a  className=\"box\"\r\n                    href=\"https://google.com\" \r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\">tja</a>\r\n\r\n                <div className=\"box\">hej</div>\r\n                <div className=\"box\">ola</div>\r\n                <div className=\"box\">tjo</div>\r\n\r\n            </div>\r\n        </animated.div>\r\n    )\r\n}\r\n\r\nexport default DropBar;\r\n","import React, {useState} from 'react';\r\nimport './Projects.css';\r\n\r\nimport {useTrail, animated} from 'react-spring';\r\n\r\nconst items = ['tja', 'tjo', 'tjimm']\r\nconst config = {mass: 30, tension: 1500, friction: 200}\r\n\r\nfunction Projects(){\r\n    /* using useState instead of setState, also imported with react lib */\r\n    const [toggle, set] = useState(true)\r\n\r\n    const trail = useTrail(items.length, {\r\n        config,\r\n        opacity: toggle ? 1 : 0,\r\n        x: toggle ? 0 : 20,\r\n        \r\n        height: toggle ? 80 : 0,\r\n        width: toggle ? 200 : 0,\r\n        /*background: toggle ? 'blue' : 'red', */\r\n        from: {opacity: 0, x: 20, height: 0, width: 0}, \r\n    })\r\n\r\n    return (\r\n        \r\n            <div>\r\n            {trail.map(({ x, height, ...rest }, index) => (\r\n                <animated.div\r\n                key={items[index]}\r\n                className=\"test\"\r\n                style={{ ...rest, transform: x.interpolate(x => `translate3d(0,${x}px,0)`) }}>\r\n                <animated.div style={{ height }}>{items[index]}</animated.div>\r\n                </animated.div>\r\n            ))}\r\n            </div>\r\n        \r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Projects;","import React, {useState, useEffect} from 'react'\r\nimport './neonLogin.css';\r\n\r\n\r\n\r\nconst NeonLogin = () => {\r\n\r\n\r\n    return (\r\n        <div className=\"neon-login\">\r\n            <input placeholder=\"Username\"\r\n                    type=\"text\"\r\n                    className=\"username-input\"></input>\r\n            <input placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    className=\"password-input\"></input>\r\n            <div className=\"login-form\">\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                login\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default NeonLogin;\r\n\r\n","import React from 'react';\r\nimport './NavBar.css';\r\nimport Info from '../info/Info';\r\n/*import {useSpring, animated} from 'react-spring'; */\r\n\r\nimport DropBar from '../dropbar/DropBar';\r\nimport Projects from '../projects/Projects';\r\nimport NeonLogin from '../neonLogin/neonLogin';\r\n\r\nexport class NavBar extends React.Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            isToggleOn: false,\r\n            isToggleOnDropBar: false,\r\n            isToggleOnProjects: false,\r\n            isToggleLogin: false\r\n        };\r\n\r\n        this.renderInfo = this.renderInfo.bind(this);\r\n        this.toggleClick = this.toggleClick.bind(this);\r\n        this.toggleClickDropBar = this.toggleClickDropBar.bind(this);\r\n        this.toggleClickProjects = this.toggleClickProjects.bind(this);\r\n        this.toggleClickLogin = this.toggleClickLogin.bind(this);\r\n        \r\n    }\r\n\r\n    renderInfo(){\r\n        return (\r\n            <div className=\"render-info\">Info</div>\r\n        )\r\n    }\r\n\r\n    toggleClick(){\r\n        this.setState({\r\n            isToggleOn: !this.state.isToggleOn,\r\n            isToggleOnDropBar: false,\r\n            isToggleOnProjects: false,\r\n        });\r\n    }\r\n    \r\n    toggleClickDropBar(){\r\n        this.setState({\r\n            isToggleOnDropBar: !this.state.isToggleOnDropBar,\r\n            isToggleOn: false,\r\n            isToggleOnProjects: false,\r\n        });\r\n    }\r\n\r\n    toggleClickProjects(){\r\n        this.setState({\r\n            isToggleOnProjects: !this.state.isToggleOnProjects,\r\n            isToggleOn: false,\r\n            isToggleOnDropBar: false\r\n        })\r\n    }\r\n\r\n    toggleClickLogin(){\r\n        this.setState({\r\n            isToggleOnProjects: false,\r\n            isToggleOn: false,\r\n            isToggleOnDropBar: false,\r\n            isToggleLogin: !this.state.isToggleLogin\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                \r\n                <div className=\"firstDiv\" >\r\n                    <p>Kuken</p>\r\n                    <div className=\"flexbox1\" onClick={this.toggleClick}>\r\n                        <h3>About me</h3>\r\n                        \r\n                    </div>\r\n                    \r\n                    <div className=\"flexbox1\" onClick={this.toggleClickDropBar}>\r\n                        <h3>CV</h3>\r\n                    </div>\r\n                    \r\n                    <div className=\"flexbox1\" onClick={this.toggleClickProjects}>\r\n                        \r\n                        <h3>projects</h3>\r\n                        \r\n                    </div>\r\n                    \r\n                    \r\n                    <div className=\"flexbox1\"><h3>capability</h3></div>\r\n                    <div className=\"flexbox1\"><h3>private</h3></div>\r\n                    \r\n                    <div className=\"flexbox1\" onClick={this.toggleClickLogin}>\r\n                        <h3>login</h3>\r\n                    </div>\r\n\r\n                    {this.state.isToggleOn ? <Info /> : null}\r\n                    {this.state.isToggleOnDropBar ? <DropBar /> : null}\r\n                    {this.state.isToggleLogin ? <NeonLogin /> : null}\r\n                    \r\n                </div>\r\n                \r\n                <div className=\"navBar-renderbox\">\r\n                    {this.state.isToggleOnProjects ? <Projects /> : null}\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\nimport {useSpring, animated} from 'react-spring';\r\nimport './Animate.css';\r\n\r\n\r\nfunction Animated() {\r\n    //use Config in usespring to change behavior of animation.\r\n    const props = useSpring({config: {duration: 10000}, opacity: 1, from: {opacity: 0}})\r\n    \r\n    const props2 = useSpring({config: {duration: 5000}, opacity: 1, from: {opacity: 0}})\r\n   \r\n\r\n    return (\r\n            <animated.div style={props}>\r\n                <div className=\"first\">\r\n                    <h3>\r\n                        tja\r\n                    </h3>\r\n                    <animated.div style={props2} className=\"second\"> Tjena </animated.div>\r\n                    \r\n\r\n                </div>\r\n            </animated.div>\r\n            )\r\n}\r\n\r\nexport default Animated;","import './Slider.css';\r\nimport React, {useState, useEffect} from 'react';\r\nimport {useTransition, animated} from 'react-spring';\r\n\r\nconst slides = [\r\n    {id: 0, backgroundColor: 'black'},\r\n    {id: 1, backgroundColor: 'red'},\r\n    {id: 2, backgroundColor: 'yellow'},\r\n    {id: 3, backgroundColor: 'green'},\r\n]\r\n\r\n//sets how it should animate\r\nconst config = {mass: 1, tension: 280, friction: 120}\r\n\r\n\r\n//component\r\nconst Slider = () => {\r\n    const [index, set] = useState(0)\r\n    const transition = useTransition(slides[index], item => item.id, {\r\n        from: {opacity: 0},\r\n        enter: {opacity: 1},\r\n        leave: {opacity: 0},\r\n        config,\r\n    })\r\n\r\n    useEffect(() => setInterval(() => set(state => (state + 1) % 4), 2000), [])\r\n\r\n    return transition.map(({item, props, key}) => (\r\n        <animated.div\r\n            key={key}\r\n            className=\"slider\"\r\n            /* used `` instead of '' made the linking work */\r\n            style={{...props, backgroundColor: `${item.backgroundColor}` }}\r\n        >\r\n            <p>\r\n                Hvaftrudner first portfolio prototype.\r\n            </p>\r\n        </animated.div>\r\n    ))\r\n}\r\n\r\nexport default Slider;","import './NeonBar.css';\r\nimport React, {useState, useEffect} from 'react';\r\nimport {useTransition, animated} from 'react-spring';\r\n\r\nconst sign = [\r\n    {id: 0, text: 'hallå där'},\r\n    {id: 1, text: 'hejsan svejsan'},\r\n    {id: 2, text: 'välkommen!'},\r\n    {id: 3, text: 'tjo å tjimm'}\r\n]\r\n\r\nconst config = {mass: 20, tension: 400, friction: 200}\r\n\r\n\r\nconst NeonBar = () => {\r\n    const [index, set] = useState(0)\r\n    const transition = useTransition(sign[index], item => item.id, {\r\n        from: {opacity: 0, textShadow: '0 0 10px #ff4da6',\r\n        boxShadow: '0px 0px 5px #e60073, 0 0 5px #ff4da6 inset'},\r\n        enter: {opacity: 1, textShadow: '0 0 20px #ff4da6', color: 'white',\r\n        boxShadow: '0px 0px 30px #e60073, 0 0 30px #ff4da6 inset'},\r\n        leave: {opacity: 0, textShadow: '0 0 20px #ff4da6',\r\n        boxShadow: '0px 0px 5px #e60073, 0 0 5px #ff4da6 inset'},\r\n        config,\r\n    })\r\n\r\n    useEffect(() => setInterval(() => set(state => (state + 1) % 4), 1000), [])\r\n    //projects visar hur man lägger in olika text i rend\r\n    return transition.map(({item, props, key, ...rest}) => (\r\n        <animated.div\r\n        key={sign[index]}\r\n        className=\"neonsign\"\r\n        style={{...props, ...rest }}\r\n        >\r\n         TJENIS\r\n        </animated.div>\r\n    ))\r\n\r\n}\r\n/*\r\n//Merge with slider.js to create neon signs\r\nconst divstyle = {\r\n    WebkitTransition: 'all', // note the capital 'W' here\r\n    msTransition: 'all' // 'ms' is the only lowercase vendor prefix\r\n  };\r\n\r\nconst NeonBar = () => {\r\n    return <div className=\"neonsign\"\r\n                style={divstyle}>hellu</div>\r\n} */\r\n\r\nexport default NeonBar;","import React from 'react';\r\n\r\nfunction Footer (){\r\n    return ( \r\n        <div className=\"footer1\">kontakt </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, {useState} from 'react';\nimport './App.css';\n/*import {useSpring, animated} from 'react-spring';*/\n\nimport NavBar from '../navbar/NavBar';\nimport Info from '../info/Info';\nimport Animated from '../animation/Animate';\nimport Projects from '../projects/Projects';\nimport Slider from '../slider/Slider';\nimport NeonBar from '../neonbar/NeonBar';\nimport NeonLogin from '../neonLogin/neonLogin';\n\n/* use footer later  right now its a test suite*/\nimport Footer from '../footer/Footer';\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      info : false,\n    }\n\n    this.toggleInfo = this.toggleInfo.bind(this);\n  }\n\n\n\n  toggleInfo = () => {\n    this.setState({\n      info : !this.state.info\n    });\n  }\n  //use \"\"Trail from spring library to render list of elements\"\"\n\n  /* Test to implement onClick passover to Navbar button */\n  testrender(){\n    const toggle = useState(true)\n\n  }\n  \n  render(){\n    return (\n      <div>\n        <div className=\"App\">\n          \n          \n            <Slider /> \n            <p>\n              Hvaftrudner first portfolio prototype.\n            </p>\n            <Animated />\n            <a\n              className=\"App-link\"\n              href=\"https://hvaftrudner.io\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Hvaftrudner.io\n            </a>\n            <NavBar />\n            <NeonBar/>\n            <NeonLogin />\n          \n        </div>\n        \n      </div>\n    )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}